# display things in 24 bit color
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# mouse support
set -g mouse on

# set scrollback history
set -g history-limit 250000

# auto set window titles
set-window-option -g automatic-rename on
set-option -g set-titles on

# set ` as the default prefix
unbind C-b
set -g prefix `
bind-key ` send-prefix

# set window and pane index to 1
set-option -g base-index 1
setw -g pane-base-index 1

# renumber windows when one is closed
set -g renumber-windows on

# highlight a window with new activity
setw -g monitor-activity on
set -g visual-activity on

# reload ~/.tmux.conf using prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# create new windows in same path
bind c new-window -c '#{pane_current_path}'

# set up vertical and horizontal splits
bind s split-window -h -c '#{pane_current_path}'
bind S split-window -v -c '#{pane_current_path}'

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(it|c|view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# remap clear screen
bind C-l send-keys 'C-l'

# easy way to get to the last window
bind Space last-window

# cycle through windows
bind -n M-Left previous-window
bind -n M-Right next-window

# quick window moving
bind -n M-S-Left swap-window -t -1
bind -n M-S-Right swap-window -t +1

# panel resizing
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

bind M-h resize-pane -L 5
bind M-j resize-pane -D 5
bind M-k resize-pane -U 5
bind M-l resize-pane -R 5

# close a window
bind q killp

# colors
setw -g mode-bg black
set-option -g pane-active-border-fg cyan

# status bar
set-option -g status-justify left
set-option -g status-bg default
set-option -g status-fg colour45
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g window-status-format '#[fg=colour45]// #[fg=white]#I:#W#[default]'
set-option -g window-status-current-format '#[fg=colour45]// #[fg=white,bold]#I:#W#[default]'
set-option -g status-left '#[fg=white,bold]#S#[fg=colour45,default]@#[fg=white,bold]#T#[default]'
set-option -g status-right '#[fg=colour45]// #[fg=white,bold]%H:%M#[default] #[fg=colour45]// #[fg=white,bold]%m/%d/%y'

# status bar messages
set-option -g message-bg colour233
set-option -g message-fg colour45

# vim/tmux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# fix escape timing
set -sg escape-time 0
